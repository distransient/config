# “There are countless ingredients that make up the human body and mind, like 
#  all the components that make up me as an individual with my own personality. 
#  Sure I have a face and voice to distinguish myself from others, but my 
#  thoughts and memories are unique only to me, and I carry a sense of my own 
#  destiny. Each of those things are just a small part of it. I collect 
#  information to use in my own way. All of that blends to create a mixture that 
#  forms me and gives rise to my conscience. I feel confined, only free to 
#  expand myself within boundaries.” - Motoko Kusanagi
#
# Sections:
# → Functions
# → Coreutil default options
# → Application defaults

# ¶ Functions
edit() {
  INPUT=(); while read data; do INPUT+=("$data"); done
  select opt in "${INPUT[@]}"; do case $opt in 
    *) vim $opt; break; esac; done < /dev/tty
}

start() { ($@ &) &> /dev/null } # Launch visual app outside shell 
f() { find -ilname "*$**" } # Search for file with text foo in name
s() { find -exec grep -n "$*" {} + 2> /dev/null } # Text search
# Cd to root of current repo
b() { 
  [ -n "$(git branch 2> /dev/null)" ] && cd $(git rev-parse --show-cdup) || \
  [ -n "$(hg root 2> /dev/null)" ] && cd $(hg root) || \
  cd $HOME
} 
ci() { git add -A && git commit -am "$*" } # commit all changes in repo
# If in vcs repo, echo name of vcs system
vcscurrent(){
  [ -n "$(git branch 2> /dev/null)" ] && echo "git" || \
  [ -n "$(hg root 2> /dev/null)" ] && echo "hg"
}
# If in vcs repo, echo name of current branch
vcsbranch(){
  [ -n "$(git branch 2> /dev/null)" ] && \
    echo $(git symbolic-ref --short -q HEAD 2> /dev/null) || \
  [ -n "$(hg root 2> /dev/null)" ] && \
    echo $(hg branch 2> /dev/null)
}
# If in vcs repo and changes have been made, echo "dirty"
vcsdirty(){
  [ -n "$(git branch 2> /dev/null)" ] && \
    [ -n "$(git status --porcelain 2> /dev/null)" ] && \
      echo "dirty" || \
  [ -n "$(hg root 2> /dev/null)" ] && \
    [ -n "$(hg status 2> /dev/null)" ] && \
      echo "dirty"
}
# Used to get character for shell prompt
promptchar(){
  [ -n "$(vcscurrent)" ] && ([ -n "$(vcsdirty)" ] && echo "?" || echo "=" ) || \
  ([ $(id -u) -eq 0 ] && echo "&") || \
  ([ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ] && echo "@") || echo "#"
}

# ¶ Coreutil default options
# Check if BSD or GNU
if ls --version 2>/dev/null | grep -q "coreutils"; then
  _lscolor="--color=always"; else _lscolor="-G"; fi
alias ls="ls -F $_lscolor" # ls with color
alias l="ls -F $_lscolor" # Lazy shorthand
alias la="ls -aFhl $_lscolor" # ls as list all
alias ll="ls -Fhl $_lscolor" # ls list non-hidden
alias cp="cp -iv" # Prompt before overwrite, verbose copy 
alias mv="mv -iv" # Prompt before overwrite, verbose move
alias rm="rm -iv" # Prompt before delete, verbose deletion 
alias grep="grep --color=auto" # Colorify printed greps
alias scrot="scrot -q 100 -b" # Full quality screencap, grab wm border

# ¶ Application defaults
alias xclip="xclip -select clipboard" # Select appropriate target for cp/paste 
alias tmux="tmux -2u" # Force 256 color/unicode tmux 
alias vim="vim -p" # Allows multiple arguments to be opened as tabs
alias v="vim -p" # Lazy shorthand

[ -n $(which xdg-open) ] && alias open="xdg-open" # Linux version of BSD Open
alias s="start"
alias w="start $BROWSER"
